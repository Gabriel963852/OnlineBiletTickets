package services;

import database.DatabaseConnection;
import java.sql.*;
import java.util.Scanner;

public class FlightService {

    public static void addFlights(Scanner scanner) {
        while (true) {
            System.out.println("\nüìû –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ –ø–æ–ª–µ—Ç–∏:");
            System.out.println("1. –ü–æ–∫–∞–∑–≤–∞–Ω–µ –Ω–∞ –ø–æ–ª–µ—Ç–∏");
            System.out.println("2. –î–æ–±–∞–≤—è–Ω–µ –Ω–∞ –ø–æ–ª–µ—Ç");
            System.out.println("3. –ò–∑—Ç—Ä–∏–≤–∞–Ω–µ –Ω–∞ –ø–æ–ª–µ—Ç");
            System.out.println("4. –ù–∞–∑–∞–¥");
            System.out.print("üëâ –ò–∑–±–æ—Ä: ");
            int choice = scanner.nextInt();
            scanner.nextLine();

            switch (choice) {
                case 1:
                    showAllFlights();
                    break;
                case 2:
                    addFlight(scanner);
                    break;
                case 3:
                    deleteFlight(scanner);
                    break;
                case 4: {
                    System.out.println("üîö –ù–∞–∑–∞–¥ –∫—ä–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—Å–∫–æ—Ç–æ –º–µ–Ω—é.");
                    return;
                }
                default: System.out.println("‚ö† –ù–µ–≤–∞–ª–∏–¥–µ–Ω –∏–∑–±–æ—Ä!");
            }
        }
    }

    // –î–æ–±–∞–≤—è–Ω–µ –Ω–∞ –ø–æ–ª–µ—Ç
    public static void addFlight(Scanner scanner) {

        try (Connection conn = DatabaseConnection.getConnection()){
            System.out.print("–í—ä–≤–µ–¥–∏ –Ω–æ–º–µ—Ä –Ω–∞ –ø–æ–ª–µ—Ç–∞: ");
            String fnumber = scanner.nextLine();
            System.out.print("–ê–≤–∏–æ–∫–æ–º–ø–∞–Ω–∏—è: ");
            String airlineOperator = scanner.nextLine();
            System.out.print("–û—Ç –ª–µ—Ç–∏—â–µ: ");
            String depAirport = scanner.nextLine();
            System.out.print("–î–æ –ª–µ—Ç–∏—â–µ: ");
            String arrAirport = scanner.nextLine();
            System.out.print("üëâ –í—ä–≤–µ–¥–∏ –¥–∞—Ç–∞ –Ω–∞ –ø–æ–ª–µ—Ç–∞ (–ì–ì–ì–ì-–ú–ú-–î–î): ");
            String dateInput = scanner.nextLine();
            Date flight_date = Date.valueOf(dateInput);
            System.out.print("–ß–∞—Å: ");
            String flightTime = scanner.nextLine();
            System.out.print("–ü—Ä–æ–¥—ä–ª–∂–∏—Ç–µ–ª–Ω–æ—Å—Ç –Ω–∞ –ø–æ–ª–µ—Ç–∞: ");
            int duration = Integer.parseInt(scanner.nextLine());
            System.out.print("–°–∞–º–æ–ª–µ—Ç: ");
            String airplane = scanner.nextLine();

        String query = "INSERT INTO flights (Fnumber, airline_operator, dep_airport, arr_airport, flight_date, flight_time, flight_duration, Airplane) " +
                "VALUES (?, ?, ?, ?, ?, ?, ?, ?)";
             PreparedStatement stmt = conn.prepareStatement(query);

            stmt.setString(1, fnumber);
            stmt.setString(2, airlineOperator);
            stmt.setString(3, depAirport);
            stmt.setString(4, arrAirport);
            stmt.setDate(5,flight_date);
            stmt.setString(6, flightTime);
            stmt.setInt(7, duration);
            stmt.setString(8, airplane);

            stmt.executeUpdate();
            System.out.println("‚úÖ –ü–æ–ª–µ—Ç—ä—Ç –µ –¥–æ–±–∞–≤–µ–Ω —É—Å–ø–µ—à–Ω–æ!");

        } catch (SQLException e) {
            System.out.println("‚ùå –ü–æ–ª–µ—Ç—ä—Ç –Ω–µ –µ –¥–æ–±–∞–≤–µ–Ω!");
        }
    }

    // –ü–æ–∫–∞–∑–≤–∞–Ω–µ –Ω–∞ –≤—Å–∏—á–∫–∏ –ø–æ–ª–µ—Ç–∏
    public static void showAllFlights() {
        String query = "SELECT * FROM flights";

        try (Connection conn = DatabaseConnection.getConnection();
             Statement stmt = conn.createStatement();
             ResultSet rs = stmt.executeQuery(query)) {

            System.out.println("\nüìã –°–ø–∏—Å—ä–∫ —Å –ø–æ–ª–µ—Ç–∏:");
            while (rs.next()) {
                System.out.println("–ù–æ–º–µ—Ä –Ω–∞ –ø–æ–ª–µ—Ç–∞: " + rs.getString("Fnumber") +
                        "| –ê–≤–∏–æ–∫–æ–º–ø–∞–Ω–∏—è: " + rs.getString("airline_operator") +
                        "| –û—Ç –ª–µ—Ç–∏—â–µ: " + rs.getString("dep_airport") +
                        "| –î–æ –ª–µ—Ç–∏—â–µ: " + rs.getString("arr_airport") +
                        "| –î–∞—Ç–∞: " + rs.getDate("flight_date") +
                        "| –ß–∞—Å: " + rs.getString("flight_time") +
                        "| –ü—Ä–æ–¥—ä–ª–∂–∏—Ç–µ–ª–Ω–æ—Å—Ç: " + rs.getInt("flight_duration") + " –º–∏–Ω." +
                        "| –°–∞–º–æ–ª–µ—Ç: " + rs.getString("Airplane"));
            }

        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    // –ò–∑—Ç—Ä–∏–≤–∞–Ω–µ –Ω–∞ –ø–æ–ª–µ—Ç –ø–æ –Ω–æ–º–µ—Ä
    public static void deleteFlight(Scanner scanner) {
        System.out.print("üëâ –ù–æ–º–µ—Ä –Ω–∞ –ø–æ–ª–µ—Ç–∞ –∑–∞ –∏–∑—Ç—Ä–∏–≤–∞–Ω–µ: ");
        String Fnumber = scanner.nextLine();

        String query = "DELETE FROM Flights WHERE Fnumber = ?";
        try (Connection conn = DatabaseConnection.getConnection();
             PreparedStatement stmt = conn.prepareStatement(query)) {

            stmt.setString(1, Fnumber);
            int rows = stmt.executeUpdate();
            if (rows > 0) {
                System.out.println("‚úÖ –ü–æ–ª–µ—Ç—ä—Ç –µ –∏–∑—Ç—Ä–∏—Ç.");
            } else {
                System.out.println("‚ö† –ü–æ–ª–µ—Ç—ä—Ç —Å —Ç–∞–∫—ä–≤ –Ω–æ–º–µ—Ä –Ω–µ –µ –Ω–∞–º–µ—Ä–µ–Ω.");
            }

        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    // (–î–æ–ø—ä–ª–Ω–∏—Ç–µ–ª–Ω–æ) –¢—ä—Ä—Å–µ–Ω–µ –Ω–∞ –ø–æ–ª–µ—Ç–∏ –ø–æ –¥–µ—Å—Ç–∏–Ω–∞—Ü–∏—è
    public static void searchFlightsByDestinationName(String destinationName) {
        String query = "SELECT f.Fnumber, f.dep_airport, a1.name AS departure_name, f.arr_airport, a2.name AS arrival_name, f.flight_date, f.flight_time, f.flight_duration " +
                "FROM Flights f " +
                "JOIN Airports a1 ON f.dep_airport = a1.code " +
                "JOIN Airports a2 ON f.arr_airport = a2.code " +
                "WHERE a2.name LIKE ?";

        try (Connection conn = DatabaseConnection.getConnection();
             PreparedStatement stmt = conn.prepareStatement(query)) {

            stmt.setString(1, "%" + destinationName + "%");
            ResultSet rs = stmt.executeQuery();

            System.out.println("\nüìÑ –ü–æ–ª–µ—Ç–∏ –¥–æ " + destinationName + ":");
            while (rs.next()) {
                System.out.println("–ü–æ–ª–µ—Ç ‚Ññ: " + rs.getString("Fnumber") +
                        " | –ò–∑–ª–∏—Ç–∞ –æ—Ç: " + rs.getString("departure_name") +
                        " | –ü—Ä–∏—Å—Ç–∏–≥–∞ –≤: " + rs.getString("arrival_name") +
                        " | –î–∞—Ç–∞: " + rs.getDate("flight_date") +
                        " | –ß–∞—Å: " + rs.getTime("flight_time") +
                        " | –ü—Ä–æ–¥—ä–ª–∂–∏—Ç–µ–ª–Ω–æ—Å—Ç: " + rs.getInt("flight_duration") + " –º–∏–Ω.");
            }

        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    //–¢—ä—Ä—Å–µ–Ω–µ –Ω–∞ –ø–æ–ª–µ—Ç –ø–æ –¥–∞—Ç–∞
    public static void searchFlightsByDate(Date flightDate) {
        String sql = "SELECT * FROM Flights WHERE flight_date = ?";
        try (Connection conn = DatabaseConnection.getConnection();
             PreparedStatement stmt = conn.prepareStatement(sql)) {

            stmt.setDate(1, flightDate);
            ResultSet rs = stmt.executeQuery();

            boolean hasResults = false;
            while (rs.next()) {
                hasResults = true;
                System.out.println("–ù–æ–º–µ—Ä –Ω–∞ –ø–æ–ª–µ—Ç–∞: " + rs.getString("Fnumber") +
                        "| –ê–≤–∏–æ–∫–æ–º–ø–∞–Ω–∏—è: " + rs.getString("airline_operator") +
                        "| –û—Ç –ª–µ—Ç–∏—â–µ: " + rs.getString("dep_airport") +
                        "| –î–æ –ª–µ—Ç–∏—â–µ: " + rs.getString("arr_airport") +
                        "| –î–∞—Ç–∞: " + rs.getDate("flight_date") +
                        "| –ß–∞—Å: " + rs.getString("flight_time") +
                        "| –ü—Ä–æ–¥—ä–ª–∂–∏—Ç–µ–ª–Ω–æ—Å—Ç: " + rs.getInt("flight_duration") + " –º–∏–Ω." +
                        "| –°–∞–º–æ–ª–µ—Ç: " + rs.getString("Airplane"));
            }

            if (!hasResults) {
                System.out.println("‚ö† –ù—è–º–∞ –ø–æ–ª–µ—Ç–∏ –∑–∞ –≤—ä–≤–µ–¥–µ–Ω–∞—Ç–∞ –¥–∞—Ç–∞.");
            }

        } catch (SQLException e) {
            e.printStackTrace();
        }
    }


}
