import services.*;
import models.Customer;

import java.sql.Date;
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        boolean isRunning = true;
        while (isRunning) {
            System.out.println("‚úàÔ∏è –û–ù–õ–ê–ô–ù –†–ï–ó–ï–†–í–ê–¶–ò–Ø –ù–ê –°–ê–ú–û–õ–ï–¢–ù–ò –ë–ò–õ–ï–¢–ò");
            System.out.println("-------------–î–û–ë–†–ï –î–û–®–õ–ò!-------------");
            System.out.println("\nüîπ –ò–∑–±–µ—Ä–µ—Ç–µ –æ–ø—Ü–∏—è:");
            System.out.println("1. –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–∞ –Ω–æ–≤ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª");
            System.out.println("2. –í—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º–∞—Ç–∞");
            System.out.println("3. –ò–∑—Ö–æ–¥");

            System.out.print("üëâ –í—ä–≤–µ–¥–µ—Ç–µ –Ω–æ–º–µ—Ä –Ω–∞ –æ–ø—Ü–∏—è: ");
            int choice = scanner.nextInt();
            scanner.nextLine();

            switch (choice) {
                case 1:
                    CustomerService.addCustomer(scanner);
                    break;
                case 2:
                    loginUser(scanner);
                    break;
                case 3:
                    System.out.println("üîö –ò–∑—Ö–æ–¥ –æ—Ç —Å–∏—Å—Ç–µ–º–∞—Ç–∞. ----------–ë–õ–ê–ì–û–î–ê–†–ò–ú –í–ò!---------------");
                    isRunning = false;
                    break;
                default:
                    System.out.println("‚ö† –ù–µ–≤–∞–ª–∏–¥–µ–Ω –∏–∑–±–æ—Ä, –æ–ø–∏—Ç–∞–π—Ç–µ –ø–∞–∫.");
            }
        }
    }


    // –õ–æ–≥–∏–Ω
    private static void loginUser(Scanner scanner) {
        System.out.println("\nüîë –í—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º–∞—Ç–∞:");
        System.out.print("üëâ –ò–º–µ–π–ª: ");
        String loginEmail = scanner.nextLine();
        System.out.print("üëâ –ü–∞—Ä–æ–ª–∞: ");
        String loginPassword = scanner.nextLine();

        String role = LoginService.authenticate(loginEmail, loginPassword);

        if (role.equals("user")) {
            System.out.println("‚úÖ –£—Å–ø–µ—à–Ω–æ –≤–ª–∏–∑–∞–Ω–µ –∫–∞—Ç–æ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª!");
            int customerId = CustomerService.getCustomerIdByEmail(loginEmail);  // —â–µ —Ç—Ä—è–±–≤–∞ –¥–∞ –¥–æ–±–∞–≤–∏–º —Ç–æ–∑–∏ –º–µ—Ç–æ–¥
            customerMenu(scanner, customerId);
        } else if (role.equals("admin")) {
            System.out.println("‚úÖ –£—Å–ø–µ—à–Ω–æ –≤–ª–∏–∑–∞–Ω–µ –∫–∞—Ç–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä!");
            adminMenu(scanner);
        } else {
            System.out.println("‚ùå –ì—Ä–µ—à–µ–Ω –∏–º–µ–π–ª –∏–ª–∏ –ø–∞—Ä–æ–ª–∞.");
        }
    }


    // –ü–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—Å–∫–æ –º–µ–Ω—é
    private static void customerMenu(Scanner scanner, int customerId) {
        boolean isRunning = true;
        while (isRunning) {
            System.out.println("\nüî∏ –ü–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—Å–∫–æ –º–µ–Ω—é:");
            System.out.println("1. –ü—Ä–µ–≥–ª–µ–¥ –Ω–∞ –ø–æ–ª–µ—Ç–∏");
            System.out.println("2. –ü—Ä–µ–≥–ª–µ–¥ –Ω–∞ –ª–µ—Ç–∏—â–∞");
            System.out.println("3. –ü—Ä–µ–≥–ª–µ–¥ –Ω–∞ –∞–≤–∏–∫–æ–º–ø–∞–Ω–∏–∏");
            System.out.println("4. –ü—Ä–µ–≥–ª–µ–¥ –Ω–∞ —Å–∞–º–æ–ª–µ—Ç–∏");
            System.out.println("5. –ü—Ä–µ–≥–ª–µ–¥ –Ω–∞ –∞–≥–µ–Ω—Ü–∏–∏");
            System.out.println("6. –¢—ä—Ä—Å–µ–Ω–µ –Ω–∞ –ø–æ–ª–µ—Ç–∏ –ø–æ –¥–µ—Å—Ç–∏–Ω–∞—Ü–∏—è");
            System.out.println("7. –¢—ä—Ä—Å–µ–Ω–µ –Ω–∞ –ø–æ–ª–µ—Ç–∏ –ø–æ –¥–∞—Ç–∞");
            System.out.println("8. –ü—Ä–æ–≤–µ—Ä–∏ —Å–≤–æ–±–æ–¥–Ω–∏ –º–µ—Å—Ç–∞ –∑–∞ –ø–æ–ª–µ—Ç");
            System.out.println("9. –ù–∞–ø—Ä–∞–≤–∏ —Ä–µ–∑–µ—Ä–≤–∞—Ü–∏—è");
            System.out.println("10. –ò–∑—Ç—Ä–∏–π —Ä–µ–∑–µ—Ä–≤–∞—Ü–∏—è");
            System.out.println("11. –ú–æ–∏—Ç–µ —Ä–µ–∑–µ—Ä–≤–∞—Ü–∏–∏");
            System.out.println("12. –ü—Ä–æ–≤–µ—Ä–∏ —Å—Ç–∞—Ç—É—Å –Ω–∞ —Ä–µ–∑–µ—Ä–≤–∞—Ü–∏—è –ø–æ –∫–æ–¥");
            System.out.println("13. –ò–∑—Ö–æ–¥");

            System.out.print("üëâ –ò–∑–±–æ—Ä: ");
            int choice = scanner.nextInt();
            scanner.nextLine();

            switch (choice) {
                case 1:
                    FlightService.showAllFlights();
                    break;
                case 2:
                    AirportService.showAllAirports();
                    break;
                case 3:
                    AirlineService.showAllAirlines();
                    break;
                case 4:
                    AirplaneService.showAllAirplanes();
                    break;
                case 5:
                    AgenciesServices.listAgencies();
                    break;
                case 6:
                    System.out.print("üëâ –í—ä–≤–µ–¥–∏ –∏–º–µ –Ω–∞ –ª–µ—Ç–∏—â–µ –∑–∞ –ø—Ä–∏—Å—Ç–∏–≥–∞–Ω–µ: ");
                    String destinationName = scanner.nextLine();
                    FlightService.searchFlightsByDestinationName(destinationName);
                    break;
                case 7:
                    try {
                        System.out.print("–í—ä–≤–µ–¥–∏ –¥–∞—Ç–∞ –Ω–∞ –ø–æ–ª–µ—Ç–∞ (YYYY-MM-DD): ");
                        String dateStr = scanner.nextLine();
                        Date date = Date.valueOf(dateStr);
                        FlightService.searchFlightsByDate(date);
                    } catch (IllegalArgumentException e) {
                        System.out.println("‚ö† –ì—Ä–µ—à–µ–Ω —Ñ–æ—Ä–º–∞—Ç –Ω–∞ –¥–∞—Ç–∞—Ç–∞!");
                    }
                    break;
                case 8:
                    BookingService.checkAvailableSeats(scanner);
                    break;
                case 9:
                    BookingService.addBooking(scanner, customerId);
                    break;
                case 10:
                    BookingService.deleteBooking(scanner);
                case 11:
                    BookingService.viewCustomerBookings(customerId);
                    break;
                case 12:
                    System.out.print("–í—ä–≤–µ–¥–∏ –∫–æ–¥ –Ω–∞ —Ä–µ–∑–µ—Ä–≤–∞—Ü–∏—è—Ç–∞: ");
                    String bookingCode = scanner.nextLine();
                    BookingService.checkBookingStatusByCode(bookingCode);
                    break;
                case 13:
                    System.out.println("üîö –ò–∑–ª–∏–∑–∞–Ω–µ –æ—Ç –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—Å–∫–æ—Ç–æ –º–µ–Ω—é.");
                    isRunning = false;
                    break;
                default:
                    System.out.println("‚ö† –ù–µ–≤–∞–ª–∏–¥–µ–Ω –∏–∑–±–æ—Ä.");
            }
        }
    }

    // –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—Å–∫–æ –º–µ–Ω—é
    private static void adminMenu(Scanner scanner) {
        boolean isRunning = true;
        while (isRunning) {
            System.out.println("\nüî∏ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—Å–∫–æ –º–µ–Ω—é:");
            System.out.println("1. –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª–∏");
            System.out.println("2. –ü—Ä–µ–≥–ª–µ–¥ –Ω–∞ –≤—Å–∏—á–∫–∏ —Ä–µ–∑–µ—Ä–≤–∞—Ü–∏–∏");
            System.out.println("3. –ü–æ—Ç–≤—ä—Ä–¥–∏ —Ä–µ–∑–µ—Ä–≤–∞—Ü–∏–∏");
            System.out.println("4. –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ –∞–≥–µ–Ω—Ü–∏–∏");
            System.out.println("5. –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ –∞–≤–∏–æ–∫–æ–º–ø–∞–Ω–∏–∏");
            System.out.println("6. –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ —Å–∞–º–æ–ª–µ—Ç–∏");
            System.out.println("7. –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ –ª–µ—Ç–∏—â–∞");
            System.out.println("8. –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ –ø–æ–ª–µ—Ç–∏");
            System.out.println("9. –ò–∑—Ö–æ–¥");

            System.out.print("üëâ –ò–∑–±–æ—Ä: ");
            int choice = scanner.nextInt();
            scanner.nextLine();

            switch (choice) {
                case 1:
                    CustomerService.manageCustomers(scanner);
                    break;
                case 2:
                    BookingService.viewAllBookings();
                    break;
                case 3:
                    BookingService.manageBookings(scanner);
                    break;
                case 4:
                    AgenciesServices.addAgencies(scanner);
                    break;
                case 5:
                    AirlineService.addAirlines(scanner);
                    break;
                case 6:
                    AirplaneService.addAirplanes(scanner);
                    break;
                case 7:
                    AirportService.addAirports(scanner);
                    break;
                case 8:
                    FlightService.addFlights(scanner);
                    break;
                case 9:
                    System.out.println("üîö –ò–∑–ª–∏–∑–∞–Ω–µ –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—Å–∫–æ—Ç–æ –º–µ–Ω—é.");
                    isRunning = false;
                    break;
                default:
                    System.out.println("‚ö† –ù–µ–≤–∞–ª–∏–¥–µ–Ω –∏–∑–±–æ—Ä.");

            }
        }
    }
}
